{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMje2cSEriMkw4NTWAi9o0x"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":17,"metadata":{"id":"FGuLBN84ftaY","executionInfo":{"status":"ok","timestamp":1698836613097,"user_tz":-180,"elapsed":324,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"outputs":[],"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras.applications import inception_v3\n","\n","\n","base_image_path = keras.utils.get_file(\"yeni.jpg\", \"https://images.unsplash.com/photo-1474418397713-7ede21d49118?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=736&q=80\")\n","result_prefix = \"yeni_dream\"\n","\n","#bunlar aktivasyonu en üst düzeyde çıkarmaya çalıştıgımız katmanların adıları\n","#ve en üst düzeye çıkarmaya çalıştıgımız son kayıptaki ağırlıklardır\n","#yeni görsel efeker elde etmek için bu ayarı düzelen\n","layer_settings={\n","    \"mixed4\":2.0,\n","    \"mixed5\":3.5,\n","    \"mixed6\":2.0,\n","    \"mixed7\":3.5,\n","}\n","# Bu hiperparametrelerle oynamak da yeni efektler elde etmenizi sağlar\n","step=0.01#gradyan cıkış adımım\n","num_octave=3#ölvek sayisi\n","octave_scale=1.4#olcek boyut\n","iteration=20 #olcek başına çıkış adımı sayisi\n","max_loss=15.0\n"]},{"cell_type":"code","source":["from IPython.display import Image,display\n","display(Image(base_image_path))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":518},"id":"xXvIN-BFiAMc","executionInfo":{"status":"ok","timestamp":1698836613575,"user_tz":-180,"elapsed":15,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}},"outputId":"3f4518dc-5f00-4769-db2b-c248a3ebc829"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"image/jpeg":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{}}]},{"cell_type":"code","source":["def preprocess_image(image_path):\n","    # Resimleri uygun dizilere açmak, yeniden boyutlandırmak ve biçimlendirmek için Util işlevi\n","    img = keras.preprocessing.image.load_img(image_path)\n","    img = keras.preprocessing.image.img_to_array(img)\n","    img = np.expand_dims(img, axis=0)\n","    img = inception_v3.preprocess_input(img)\n","    return img\n","\n","\n","def deprocess_image(x):\n","    # NumPy dizisini geçerli bir görüntüye dönüştürmek için Util işlevi.\n","    x = x.reshape((x.shape[1], x.shape[2], 3))\n","    # Inceptionv3 ön işlemesini geri alma\n","    x /= 2.0\n","    x += 0.5\n","    x *= 255.0\n","    # Convert to uint8 and clip to the valid range [0, 255]\n","    x = np.clip(x, 0, 255).astype(\"uint8\")\n","    return x"],"metadata":{"id":"yPCBJvC6iUe8","executionInfo":{"status":"ok","timestamp":1698836613576,"user_tz":-180,"elapsed":11,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["model = inception_v3.InceptionV3(weights=\"imagenet\", include_top=False)\n","\n","# Her \"anahtar\" katmanın sembolik çıktılarını alın\n","outputs_dict = dict(\n","    [\n","        (layer.name, layer.output)\n","        for layer in [model.get_layer(name) for name in layer_settings.keys()]\n","    ]\n",")\n","\n","# Her hedef katman için etkinleştirme değerlerini döndüren bir model oluşturun (dict olarak)\n","feature_extractor = keras.Model(inputs=model.inputs, outputs=outputs_dict)"],"metadata":{"id":"kc1SrCioiaCq","executionInfo":{"status":"ok","timestamp":1698836615860,"user_tz":-180,"elapsed":2294,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["def compute_loss(input_image):\n","    features = feature_extractor(input_image)\n","    # Kaybı başlat\n","    loss = tf.zeros(shape=())\n","    for name in features.keys():\n","        coeff = layer_settings[name]\n","        activation = features[name]\n","        # Sınırda olmayan pikselleri yalnızca kayda dahil ederek kenarlık yapaylıklarından kaçınırız.\n","        scaling = tf.reduce_prod(tf.cast(tf.shape(activation), \"float32\"))\n","        loss += coeff * tf.reduce_sum(tf.square(activation[:, 2:-2, 2:-2, :])) / scaling\n","    return loss"],"metadata":{"id":"aDUiekh_ij2L","executionInfo":{"status":"ok","timestamp":1698836615862,"user_tz":-180,"elapsed":33,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"W_zYuHrGizyo","executionInfo":{"status":"ok","timestamp":1698836615863,"user_tz":-180,"elapsed":32,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["@tf.function\n","def gradient_ascent_step(img, learning_rate):\n","    with tf.GradientTape() as tape:\n","        tape.watch(img)\n","        loss = compute_loss(img)\n","    # Gradyanları Hesapla.\n","    grads = tape.gradient(loss, img)\n","    # Gradyanları Normalize Et.\n","    grads /= tf.maximum(tf.reduce_mean(tf.abs(grads)), 1e-6)\n","    img += learning_rate * grads\n","    return loss, img\n","\n","\n","def gradient_ascent_loop(img, iterations, learning_rate, max_loss=None):\n","    for i in range(iterations):\n","        loss, img = gradient_ascent_step(img, learning_rate)\n","        if max_loss is not None and loss > max_loss:\n","            break\n","        print(\"... Loss value at step %d: %.2f\" % (i, loss))\n","    return img"],"metadata":{"id":"e9S7hCweinmq","executionInfo":{"status":"ok","timestamp":1698836615864,"user_tz":-180,"elapsed":31,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["original_img = preprocess_image(base_image_path)\n","original_shape = original_img.shape[1:3]\n","\n","successive_shapes = [original_shape]\n","for i in range(1, num_octave):\n","    shape = tuple([int(dim / (octave_scale ** i)) for dim in original_shape])\n","    successive_shapes.append(shape)\n","successive_shapes = successive_shapes[::-1]\n","shrunk_original_img = tf.image.resize(original_img, successive_shapes[0])\n","\n","img = tf.identity(original_img)\n","for i, shape in enumerate(successive_shapes):\n","    print(\"Processing octave %d with shape %s\" % (i, shape))\n","    img = tf.image.resize(img, shape)\n","    img = gradient_ascent_loop(\n","        img, iterations=iterations, learning_rate=step, max_loss=max_loss\n","    )\n","    upscaled_shrunk_original_img = tf.image.resize(shrunk_original_img, shape)\n","    same_size_original = tf.image.resize(original_img, shape)\n","    lost_detail = same_size_original - upscaled_shrunk_original_img\n","\n","    img += lost_detail\n","    shrunk_original_img = tf.image.resize(original_img, shape)\n","\n","keras.preprocessing.image.save_img(result_prefix + \".png\", deprocess_image(img.numpy()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":267},"id":"wZI9GmNXiqCE","executionInfo":{"status":"error","timestamp":1698836615864,"user_tz":-180,"elapsed":29,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}},"outputId":"18ef5a4c-3173-4cd4-c036-8054aeef45c2"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Processing octave 0 with shape (255, 375)\n"]},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-3c608eb53ebc>\u001b[0m in \u001b[0;36m<cell line: 12>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     img = gradient_ascent_loop(\n\u001b[0;32m---> 16\u001b[0;31m         \u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miterations\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0miterations\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_loss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmax_loss\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m     )\n\u001b[1;32m     18\u001b[0m     \u001b[0mupscaled_shrunk_original_img\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mshrunk_original_img\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'iterations' is not defined"]}]},{"cell_type":"code","source":["display(Image(result_prefix + \".png\"))"],"metadata":{"id":"KUBE6RgRitUc","executionInfo":{"status":"aborted","timestamp":1698836615865,"user_tz":-180,"elapsed":23,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"INCgIhOajVul","executionInfo":{"status":"aborted","timestamp":1698836615866,"user_tz":-180,"elapsed":24,"user":{"displayName":"Ayhan Çelik","userId":"17091502814199723515"}}},"execution_count":null,"outputs":[]}]}